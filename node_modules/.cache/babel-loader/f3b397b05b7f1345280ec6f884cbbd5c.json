{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Newforce.NEWFORCE-013\\\\workspace\\\\capstone\\\\capstone-bbb\\\\src\\\\components\\\\search\\\\SearchResultsCard.js\";\nimport React from \"react\";\nimport { Card, Icon, Image, Button, Grid } from \"semantic-ui-react\";\nimport \"./SearchCard.css\"; //grid nor card group is working? take off description and try again?\n//connect modal into this card\n\nclass SearchResults extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"searchCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      itemsPerRow: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, this.props.searchProp.volumeInfo.title), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, this.props.searchProp.volumeInfo.authors)), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, this.props.searchProp.volumeInfo.description)), /*#__PURE__*/React.createElement(Button, {\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button.Content, {\n      visible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Add to Shelf\"), /*#__PURE__*/React.createElement(Button.Content, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"book\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 27\n        }\n      }, \"Show Modal\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Select a Photo\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      image: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: \"/images/avatar/large/rachel.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Default Profile Image\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"We've found the following gravatar image associated with your e-mail address.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Is it okay to use this photo?\"))))));\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["C:/Users/Newforce.NEWFORCE-013/workspace/capstone/capstone-bbb/src/components/search/SearchResultsCard.js"],"names":["React","Card","Icon","Image","Button","Grid","SearchResults","Component","render","props","searchProp","volumeInfo","title","authors","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,mBAAhD;AACA,OAAO,kBAAP,C,CACA;AACA;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,UAAtB,CAAiCC,KADpC,CADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKH,KAAL,CAAWC,UAAX,CAAsBC,UAAtB,CAAiCE,OAAxC,CADF,CAJF,eAOE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWC,UAAX,CAAsBC,UAAtB,CAAiCG,WADpC,CAPF,CATF,eAoBE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CApBF,CADF,CADF,CADF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAC,iCAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANF,CANF,CAFF,CADF,CAhCF,CADF;AAuDD;;AAzDyC;;AA2D5C,eAAeR,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Icon, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport \"./SearchCard.css\";\r\n//grid nor card group is working? take off description and try again?\r\n//connect modal into this card\r\nclass SearchResults extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"searchCard\">\r\n          <Card.Group itemsPerRow={4}>\r\n            <Card>\r\n              {/* <Image\r\n          // can I do ternary statement? so this will contain to work?\r\n            src={this.props.searchProp.volumeInfo.imageLinks.smallThumbnail}\r\n            wrapped\r\n            size=\"small\"\r\n            ui={false}\r\n            n\r\n          /> */}\r\n              <Card.Content>\r\n                <Card.Header>\r\n                  {this.props.searchProp.volumeInfo.title}\r\n                </Card.Header>\r\n                <Card.Meta>\r\n                  <span>{this.props.searchProp.volumeInfo.authors}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                  {this.props.searchProp.volumeInfo.description}\r\n                </Card.Description>\r\n              </Card.Content>\r\n              <Button animated>\r\n                <Button.Content visible>Add to Shelf</Button.Content>\r\n                <Button.Content hidden>\r\n                  <Icon name=\"book\" />\r\n                </Button.Content>\r\n              </Button>\r\n            </Card>\r\n          </Card.Group>\r\n        </div>\r\n        <div>\r\n          <Modal trigger={<Button>Show Modal</Button>}>\r\n            <Modal.Header>Select a Photo</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image\r\n                wrapped\r\n                size=\"medium\"\r\n                src=\"/images/avatar/large/rachel.png\"\r\n              />\r\n              <Modal.Description>\r\n                <Header>Default Profile Image</Header>\r\n                <p>\r\n                  We've found the following gravatar image associated with your\r\n                  e-mail address.\r\n                </p>\r\n                <p>Is it okay to use this photo?</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}